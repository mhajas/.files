# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables

set $background_color #212121 
set $main_font_color #268bd2

#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi --show drun

###
# Run after start
#
exec ~/.files/sway/startup.sh
exec ~/.files/sway/idle.sh


font pango:SourceCodePro Medium 10

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
exec_always ~/.files/sway/bg.sh

### Input configuration

input "SynPS/2 Synaptics TouchPad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

input * {
	xkb_layout us,sk
    xkb_variant ,qwerty
	xkb_model pc105
	xkb_options grp:alt_shift_toggle
}

### Workspaces
set $ws1 1:messaging
set $ws2 2:main
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9:spotify

# Link workspace to monitor
workspace $ws1 output 'Dell Inc. DELL P2214H 29C294342YPB' 'eDP-1'
workspace $ws2 output 'Dell Inc. DELL P2720DC JGZFT03' 'NEC Corporation E231W 25303554NA   '
workspace $ws9 output 'Dell Inc. DELL P2720DC JGZFT03' 'NEC Corporation E231W 25303554NA   '

# Wokspace focused after start
workspace 2:main


### Window management
#
# Link some programs to workspaces (swaymsg -t get_tree)
assign [app_id="google-chrome"] workspace $ws2
assign [app_id="firefox"] workspace $ws2
assign [class="Rambox"] workspace $ws1
assign [class="Spotify"] workspace $ws9

# Inhibit idle on fullscreen in browser
for_window [app_id="Firefox"] inhibit_idle fullscreen
for_window [app_id="Google-chrome"] inhibit_idle fullscreen

# Run apps in floating mode
for_window [app_id="gnome-calculator"] floating enable

# Other
no_focus [window_type="dialog"]
focus_on_window_activation smart
seat * hide_cursor 10000

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+Tab exec wofi --show window

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    bindsym $mod+x move workspace to output right
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"


set $mode_system "(l)ock; l(o)gout; (r)eboot; (p)oweroff; reload (c)onfig"
bindsym $mod+Escape mode $mode_system
mode $mode_system {
	bindsym l exec ~/.files/sway/lock.sh
	bindsym o exit
	bindsym r exec sudo reboot, mode "default"
	bindsym p exec sudo poweroff, mode "default"
	bindsym c reload

	bindsym Return mode "default"
	bindsym Escape mode "default"
}

mode "locked" {
	bindsym --locked Escape exec ~/.files/sway/idle.sh timeout-now
	bindsym --locked XF86AudioPlay exec playerctl play-pause
	bindsym --locked $mod+Shift+p exec playerctl play-pause
	bindcode --locked Shift+63 exec amixer -q set Master toggle
	bindsym --locked XF86AudioMute exec amixer -q set Master toggle

	bindsym $mod+Escape mode "default"
}

### Custom key bindings
# Launch wifi choice
bindsym $mod+n exec $term -e nmtui-connect

# Media control 
bindsym XF86AudioRaiseVolume exec amixer -q set Master 2%+ unmute
bindsym XF86AudioLowerVolume exec amixer -q set Master 2%- unmute
bindsym XF86AudioMute exec amixer -q set Master toggle
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86MonBrightnessUp exec brightnessctl s +10%
bindsym XF86MonBrightnessDown exec brightnessctl s 10%-

# Lock screen
bindsym $mod+Ctrl+l exec swaylock

# Sleep
bindsym $mod+Ctrl+Shift+l exec systemctl suspend

# Screenshots
set $mode_system "(f)ocused; (r)egion; (w)hole; Shift + [frw] saved to file/clipboard"
bindsym $mod+Print mode $mode_system
mode $mode_system {
    bindsym f exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') - | wl-copy && notify-send "Screenshot taken!" "Focused monitor saved to clipboard"
    bindsym Shift+f exec grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') $(xdg-user-dir PICTURES)/screenshots/$(date +'screenshot_%Y%m%d_%H%M%S.png') && notify-send "Screenshot taken!" "Focused monitor saved to $(date +'screenshot_%Y%m%d_%H%M%S.png')"

    bindsym r exec grim -g "$(slurp)" - | wl-copy && notify-send "Screenshot taken!" "Selected region saved to clipboard"
    bindsym Shift+r exec grim -g "$(slurp)" $(xdg-user-dir PICTURES)/screenshots/$(date +'screenshot_%Y%m%d_%H%M%S.png') && notify-send "Screenshot taken!" "Selected region saved to $(date +'screenshot_%Y%m%d_%H%M%S.png')"

    bindsym w exec grim - | wl-copy && notify-send "Screenshot taken!" "Whole screen saved to clipboard"
    bindsym Shift+w exec grim $(xdg-user-dir PICTURES)/screenshots/$(date +'screenshot_%Y%m%d_%H%M%S.png') && notify-send "Screenshot taken!" "Whole screen saved to $(date +'screenshot_%Y%m%d_%H%M%S.png')"
	
    bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym Print exec grim -g "$(slurp)" - | wl-copy && notify-send "Screenshot taken!" "Selected region saved to clipboard"   




#
# Window color
#

# class                 border            backgr.           text              indicator child_border
client.focused          $background_color $main_font_color  $background_color #2e9ef4   #285577
client.focused_inactive $main_font_color  $background_color           $main_font_color           #484e50   #5f676a
client.unfocused        $background_color $background_color $main_font_color  #292d2e   #222222
client.urgent           #2f343a           #711919           #ffffff           #900000   #900000
client.placeholder      #000000           #0c0c0c           #ffffff           #000000   #0c0c0c

client.background       #ffffff

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
include ~/.files/bumblebee-status/sway-status-bar

include /etc/sway/config.d/*
